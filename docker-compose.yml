services:
  django:
    build: ./backend
    networks:
      - django_net
      - redis_net
    volumes:
      - django_statics:/app/django/static
      - django_media:/app/media
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgresql:
        condition: service_healthy
    restart: unless-stopped

  redis:
    image: redis:7.4-alpine
    networks:
      - redis_net
    ulimits:
      nofile:
        soft: 10032
        hard: 10032

  postgresql:
    image: postgres:16-alpine
    networks:
      - django_net
    expose:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 30s
      retries: 10
    restart: unless-stopped

  nginx:
    image: nginx:1.27.0-alpine
    ports:
      - 80:80
      - 443:443
    networks:
      - django_net
    depends_on:
      - django
    volumes:
      - ./frontend:/var/www/html/
      - django_statics:/var/www/django
      - django_media:/var/www/media
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/certificates:/etc/nginx/certificates
    env_file:
      - .env
    restart: unless-stopped

volumes:
  django_statics:
  django_media:
  data:
  postgres-data:

networks:
  django_net:
  redis_net:
